site_name: Red Hat OpenShift on IBM Z and LinuxONE Workshop
repo_url: https://github.com/mmondics/ocp-z-workshop/
site_url: https://mmondics.github.io/ocp-z-workshop/
edit_uri: edit/main/docs

nav:
    - Home: 'index.md'
    - Prerequisites: 'prerequisites.md'
    - Lab Assignments: 'lab-assignments.md'
    - Lab Architecture: 'workshop-architecture.md'
    - Presentations:
      - Presentation 1: presentations/combined-presentations.pdf
      - Presentation 2: presentations/combined-presentations.pdf#page=48
    - Hands-on Lab: 'lab.md'


    # - Labs: 
    #   - Exploring the OpenShift Console: 
    #     - Introduction: 'lab001/lab001-1.md'
    #     - Connect to OCP: 'lab001/lab001-2.md'
    #     - The Administrator Persepctive: 'lab001/lab001-3.md'
    #     - The Developer Perspective: 'lab001/lab001-4.md'
    #     - Deploy from the Developer Catalog: 'lab001/lab001-5.md'
    #     - View Workload from the Administrator Perspective: 'lab001/lab001-6.md'
    #     - Cleaning Up: 'lab001/lab001-7.md'
    #   - Using the OpenShift Command Line (oc):
    #     - Introduction: 'lab002/lab002-1.md'
    #     - Log into OpenShift Using the CLI: 'lab002/lab002-2.md'
    #     - Overview of the OpenShift CLI: 'lab002/lab002-3.md'
    #     - Deploy Container Image from the CLI: 'lab002/lab002-4.md'
    #     - Open a Remote Shell Session into the MongoDB Pod: 'lab002/lab002-5.md'
    #     - Working with Pods: 'lab002/lab002-6.md'
    #     - Administrative CLI Commands: 'lab002/lab002-7.md'
    #     - Cleaning Up: 'lab002/lab002-8.md'
    #   - Deploying an Application from Source Code:
    #     - Source-to-Image (S2I) Overview: 'lab004/lab004-1.md'
    #     - Exploring GitHub and the Example Health Source Code: 'lab004/lab004-2.md'
    #     - Connect to OCP and Authenticate: 'lab004/lab004-3.md'
    #     - Edit the Source Code and Push an Update: 'lab004/lab004-4.md'
    #     - Cleaning Up: 'lab004/lab004-5.md'
    #   - OpenShift Pipelines:
    #     - Introduction to OpenShift Pipelines: 'lab009/lab009-0.md'
    #     - Log into OpenShift Using the CLI: 'lab009/lab009-1.md'
    #     - Cloning the GitHub Repository and Viewing its Contents: 'lab009/lab009-2.md'
    #     - Understanding and Deploying Tasks: 'lab009/lab009-3.md'
    #     - Understanding and Deploying Pipelines: 'lab009/lab009-4.md'
    #     - Running the Pipeline: 'lab009/lab009-5.md'
    #     - Access the Application in a Browser: 'lab009/lab009-6.md'
    #     - Cleaning Up: 'lab009/lab009-7.md'
#      - OpenShift Service Mesh:
#        - Overview of the OpenShift Service Mesh: 'lab010/lab010-1.md'
#        - OpenShift Service Mesh Architecture: 'lab010/lab010-2.md'
#        - Log into OpenShift Using the CLI: 'lab010/lab010-3.md'
#        - Cloning the GitHub Repository and Reviewing its Contents: 'lab010/lab010-4.md'
#        - Deploying an Application on the Service Mesh: 'lab010/lab010-5.md'
#        - Understanding and Deploying a Service Mesh Gateway and Virtual Service: 'lab010/lab010-6.md'
#        - Traffic Management: 'lab010/lab010-7.md'
#        - Application Observability with Kiali: 'lab010/lab010-8.md'
#        - Distributed Tracing with Jaeger: 'lab010/lab010-9.md'
#        - Wrap Up & Clean Up: 'lab010/lab010-10.md'
      # - Monitoring, Metering, and Metrics:
      #   - Overview of OpenShift Monitoring: 'lab005/lab005-1.md'
      #   - Connect to OCP and Authenticate: 'lab005/lab005-2.md'
      #   - Using OpenShift Metrics (Prometheus): 'lab005/lab005-3.md'
      #   - Using the In-Browser Grafana Dashboards: 'lab005/lab005-4.md'
      #   - Connect to Grafana: 'lab005/lab005-5.md'
      #   - Using Grafana Dashboards: 'lab005/lab005-6.md'
      #   - Using OpenShift Alerts (Alertmanager): 'lab005/lab005-7.md' 
      # - Using Persistent Storage with MongoDB and NodeJS:
      #   - Overview of Persistent Storage and Application Architecture: 'lab006/lab006-1.md'
      #   - Connect to OCP and Authenticate: 'lab006/lab006-2.md'
      #   - Create a PersistentVolumeClaim: 'lab006/lab006-3.md'
      #   - Deploy MongoDB from Container Image: 'lab006/lab006-4.md'
      #   - Deploy Node.js Application from Dockerfile: 'lab006/lab006-5.md'
      #   - Interacting with MongoDB from Node.js Application: 'lab006/lab006-6.md'
      #   - Cleaning Up: 'lab006/lab006-7.md'
#      - Using the z/OS Cloud Broker: 
#        - Introduction: 'lab003/lab003-1.md'
#        - Connect to OCP: 'lab003/lab003-2.md'
#        - Deploy Liberty for z/OS Using the z/OS Cloud Broker: 'lab003/lab003-3.md'
#        - Stop and Restart Liberty for z/OS from OCP: 'lab003/lab003-4.md'
#        - Cleaning Up: 'lab003/lab003-5.md'
#      - Deploying an Application with the Open Liberty Operator:
#        - Overview of the Open Liberty Operator and Sample Application: 'lab007/lab007-1.md'
#        - Log into OpenShift Using the CLI: 'lab007/lab007-2.md'
#        - Cloning the GitHub Repository and Reviewing its Contents: 'lab007/lab007-3.md'
#        - Using the Open Liberty Operator to Install an Application: 'lab007/lab007-4.md'
#        - Access the Application in a Browser: 'lab007/lab007-5.md'
#        - Cleaning Up: 'lab007/lab007-6.md'
#      - Deploying an Application with Quarkus Red Hat Runtime:
#        - Overview of the Quarkus Red Hat Runtime: 'lab008/lab008-1.md'
#        - Log into OpenShift Using the CLI: 'lab008/lab008-2.md'
#        - Creating and Reviewing the Quarkus Project: 'lab008/lab008-3.md'
#        - Configure the Application for OpenShift: 'lab008/lab008-4.md'
#        - Deploy the Application onto OpenShift: 'lab008/lab008-5.md'
#        - Cleaning Up: 'lab008/lab008-6.md'

theme: 
  name: material
  palette:
    scheme: default
    primary: black
    font:
      text: IBM Plex Sans
      code: IBM Plex Mono
  favicon: images/openshift-logo.png
  logo: images/openshift-logo.png

extra_css:
  - stylesheets/extra.css

copyright: Copyright Â© 2024 IBM Z Washington Systems Center

plugins:
  - search
#  - enumerate-headings:
#      toc_depth: 6
#      strict: true
  - print-site:
      add_to_navigation: true

markdown_extensions:
  - admonition
  - codehilite
  - footnotes
  - pymdownx.arithmatex
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.critic
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
  - pymdownx.magiclink
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.superfences
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tabbed
  - pymdownx.tilde
  - attr_list
  - toc:
      permalink: true
